//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Bko.Business.MonitoringSrv {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AccessModel", Namespace="http://schemas.datacontract.org/2004/07/MRS.MonitoringService")]
    [System.SerializableAttribute()]
    public partial class AccessModel : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long BusinessEntityIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleEnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleFaField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long BusinessEntityId {
            get {
                return this.BusinessEntityIdField;
            }
            set {
                if ((this.BusinessEntityIdField.Equals(value) != true)) {
                    this.BusinessEntityIdField = value;
                    this.RaisePropertyChanged("BusinessEntityId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TitleEn {
            get {
                return this.TitleEnField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleEnField, value) != true)) {
                    this.TitleEnField = value;
                    this.RaisePropertyChanged("TitleEn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TitleFa {
            get {
                return this.TitleFaField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleFaField, value) != true)) {
                    this.TitleFaField = value;
                    this.RaisePropertyChanged("TitleFa");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="MonitoringSrv.IMonitorinSrv")]
    public interface IMonitorinSrv {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMonitorinSrv/ResourceStatus", ReplyAction="http://tempuri.org/IMonitorinSrv/ResourceStatusResponse")]
        string ResourceStatus();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMonitorinSrv/ResourceStatus", ReplyAction="http://tempuri.org/IMonitorinSrv/ResourceStatusResponse")]
        System.Threading.Tasks.Task<string> ResourceStatusAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMonitorinSrv/Ping", ReplyAction="http://tempuri.org/IMonitorinSrv/PingResponse")]
        string Ping();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMonitorinSrv/Ping", ReplyAction="http://tempuri.org/IMonitorinSrv/PingResponse")]
        System.Threading.Tasks.Task<string> PingAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMonitorinSrv/OperatorState", ReplyAction="http://tempuri.org/IMonitorinSrv/OperatorStateResponse")]
        string OperatorState();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMonitorinSrv/OperatorState", ReplyAction="http://tempuri.org/IMonitorinSrv/OperatorStateResponse")]
        System.Threading.Tasks.Task<string> OperatorStateAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMonitorinSrv/RefreshCache", ReplyAction="http://tempuri.org/IMonitorinSrv/RefreshCacheResponse")]
        bool RefreshCache();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMonitorinSrv/RefreshCache", ReplyAction="http://tempuri.org/IMonitorinSrv/RefreshCacheResponse")]
        System.Threading.Tasks.Task<bool> RefreshCacheAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMonitorinSrv/ProviderWalletBalance", ReplyAction="http://tempuri.org/IMonitorinSrv/ProviderWalletBalanceResponse")]
        System.Collections.Generic.Dictionary<string, string> ProviderWalletBalance();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMonitorinSrv/ProviderWalletBalance", ReplyAction="http://tempuri.org/IMonitorinSrv/ProviderWalletBalanceResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> ProviderWalletBalanceAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMonitorinSrv/GetBEBalance", ReplyAction="http://tempuri.org/IMonitorinSrv/GetBEBalanceResponse")]
        long GetBEBalance(long BId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMonitorinSrv/GetBEBalance", ReplyAction="http://tempuri.org/IMonitorinSrv/GetBEBalanceResponse")]
        System.Threading.Tasks.Task<long> GetBEBalanceAsync(long BId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMonitorinSrv/FireWallResult", ReplyAction="http://tempuri.org/IMonitorinSrv/FireWallResultResponse")]
        Bko.Business.MonitoringSrv.AccessModel[] FireWallResult(int port);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMonitorinSrv/FireWallResult", ReplyAction="http://tempuri.org/IMonitorinSrv/FireWallResultResponse")]
        System.Threading.Tasks.Task<Bko.Business.MonitoringSrv.AccessModel[]> FireWallResultAsync(int port);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IMonitorinSrvChannel : Bko.Business.MonitoringSrv.IMonitorinSrv, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MonitorinSrvClient : System.ServiceModel.ClientBase<Bko.Business.MonitoringSrv.IMonitorinSrv>, Bko.Business.MonitoringSrv.IMonitorinSrv {
        
        public MonitorinSrvClient() {
        }
        
        public MonitorinSrvClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public MonitorinSrvClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MonitorinSrvClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MonitorinSrvClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string ResourceStatus() {
            return base.Channel.ResourceStatus();
        }
        
        public System.Threading.Tasks.Task<string> ResourceStatusAsync() {
            return base.Channel.ResourceStatusAsync();
        }
        
        public string Ping() {
            return base.Channel.Ping();
        }
        
        public System.Threading.Tasks.Task<string> PingAsync() {
            return base.Channel.PingAsync();
        }
        
        public string OperatorState() {
            return base.Channel.OperatorState();
        }
        
        public System.Threading.Tasks.Task<string> OperatorStateAsync() {
            return base.Channel.OperatorStateAsync();
        }
        
        public bool RefreshCache() {
            return base.Channel.RefreshCache();
        }
        
        public System.Threading.Tasks.Task<bool> RefreshCacheAsync() {
            return base.Channel.RefreshCacheAsync();
        }
        
        public System.Collections.Generic.Dictionary<string, string> ProviderWalletBalance() {
            return base.Channel.ProviderWalletBalance();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> ProviderWalletBalanceAsync() {
            return base.Channel.ProviderWalletBalanceAsync();
        }
        
        public long GetBEBalance(long BId) {
            return base.Channel.GetBEBalance(BId);
        }
        
        public System.Threading.Tasks.Task<long> GetBEBalanceAsync(long BId) {
            return base.Channel.GetBEBalanceAsync(BId);
        }
        
        public Bko.Business.MonitoringSrv.AccessModel[] FireWallResult(int port) {
            return base.Channel.FireWallResult(port);
        }
        
        public System.Threading.Tasks.Task<Bko.Business.MonitoringSrv.AccessModel[]> FireWallResultAsync(int port) {
            return base.Channel.FireWallResultAsync(port);
        }
    }
}
